:root {
	color-scheme: dark light;
	font-family: system-ui, sans-serif;
	font-size: 1.3rem;
}

:where(*, *::after, *::before) {
	box-sizing: border-box;
	font-family: inherit;
}

dialog {
	border: medium solid currentColor;
	border-radius: 0.5rem;
	margin: 1rem;
	padding: 1rem;
	position: relative;
	width: calc(100% - 2rem);
}

input, select, button, textarea { font-size: inherit; }

input, select, textarea {
	border: solid currentColor medium;
	border-radius: 0.5rem;
}

fieldset {
	border: solid medium currentColor;
	border-radius: 0.5rem;
	margin-block: 1rem;
}

details { margin-block: 1rem; }
summary {
	border: solid currentColor medium;
	border-radius: 0.5rem;
	padding: 0.5rem 1rem;
}

/* dprint-ignore */
details:has( :not(:focus):invalid) summary {
	color: goldenrod;
	font-weight: bold;

	&::after { content: ' (Needs attention ⚠️)'; }
}

label:has(~ :is(input, select):invalid:not(:focus):not(:user-invalid)) {
	color: goldenrod;
	font-weight: bold;

	&::before { content: '⚠️ '; }
}

:is(input, select):invalid:not(:focus):not(:user-invalid) {
	color: goldenrod;
	font-weight: bold;
}

:is(input, select):invalid ~ .error-message {
	color: goldenrod;
	display: block;
}

label:has(~ :is(input, select):user-invalid) {
	color: red;
	font-weight: bold;

	&::before { content: '⚠️ '; }
}

:is(input, select):user-invalid {
	color: red;
	font-weight: bold;
}

.error-message {
	border: solid currentColor medium;
	border-radius: 0.5rem;
	display: none;
	font-weight: bold;
	margin: 0.5rem;
	max-width: fit-content;
	min-width: min-content;
	padding: 0.5rem;
	width: 100%;
}

:is(input, select):user-invalid ~ .error-message {
	color: red;
	display: block;
}

header div { text-align: center; }

.table-wrapper {
	container-type: inline-size;
	overflow: auto;

	table {
		border-collapse: collapse;
		border-spacing: 0;
		width: max-content;
	}

	td, th { padding: 0.3rem; }

	th.sticky-header {
		inset-block-start: 0;
		inset-inline-start: 0;
		position: sticky;
	}

	thead th { border-bottom: solid currentColor medium; }

	tr :is(td, th) { background-color: canvas; }
	tr:nth-child(even) :is(td, th) { background-color: color-mix(in srgb, gray 30%, canvas); }
}
